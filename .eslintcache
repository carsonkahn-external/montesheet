[{"/Users/dps/proj/spreedsheet/src/index.js":"1","/Users/dps/proj/spreedsheet/src/serviceWorker.js":"2","/Users/dps/proj/spreedsheet/src/pages/_app.js":"3","/Users/dps/proj/spreedsheet/src/pages/not-found.js":"4","/Users/dps/proj/spreedsheet/src/pages/dashboard.js":"5","/Users/dps/proj/spreedsheet/src/components/Navbar.js":"6","/Users/dps/proj/spreedsheet/src/components/DashboardSection.js":"7","/Users/dps/proj/spreedsheet/src/components/Section.js":"8","/Users/dps/proj/spreedsheet/src/components/SectionHeader.js":"9","/Users/dps/proj/spreedsheet/src/components/SpreadsheetItems.js":"10","/Users/dps/proj/spreedsheet/src/jison/grammar.js":"11","/Users/dps/proj/spreedsheet/src/util/theme.js":"12","/Users/dps/proj/spreedsheet/src/components/BackgroundImage.js":"13"},{"size":437,"mtime":1612681274000,"results":"14","hashOfConfig":"15"},{"size":4971,"mtime":1612681274000,"results":"16","hashOfConfig":"15"},{"size":561,"mtime":1612681310955,"results":"17","hashOfConfig":"15"},{"size":307,"mtime":1612681274000,"results":"18","hashOfConfig":"15"},{"size":331,"mtime":1612681162880,"results":"19","hashOfConfig":"15"},{"size":2276,"mtime":1612722993163,"results":"20","hashOfConfig":"15"},{"size":652,"mtime":1612680654486,"results":"21","hashOfConfig":"15"},{"size":2485,"mtime":1612681274000,"results":"22","hashOfConfig":"15"},{"size":1357,"mtime":1612681274000,"results":"23","hashOfConfig":"15"},{"size":8775,"mtime":1612759786464,"results":"24","hashOfConfig":"15"},{"size":23044,"mtime":1612759832561,"results":"25","hashOfConfig":"15"},{"size":3134,"mtime":1612757566462,"results":"26","hashOfConfig":"15"},{"size":659,"mtime":1612722820269,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17e2shm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/dps/proj/spreedsheet/src/index.js",[],["58","59"],"/Users/dps/proj/spreedsheet/src/serviceWorker.js",[],"/Users/dps/proj/spreedsheet/src/pages/_app.js",["60"],"import React from \"react\";\nimport Navbar from \"./../components/Navbar\";\nimport DashboardPage from \"./dashboard\";\nimport NotFoundPage from \"./not-found.js\";\nimport { ThemeProvider } from \"./../util/theme.js\";\n\nfunction App(props) {\n  return (\n    <ThemeProvider>\n          <>\n            <Navbar\n              color=\"default\"\n              logo=\"https://uploads.divjoy.com/logo.svg\"\n              logoInverted=\"https://uploads.divjoy.com/logo-white.svg\"\n            />\n\n            <DashboardPage/>\n          </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/dps/proj/spreedsheet/src/pages/not-found.js",[],"/Users/dps/proj/spreedsheet/src/pages/dashboard.js",[],"/Users/dps/proj/spreedsheet/src/components/Navbar.js",[],"/Users/dps/proj/spreedsheet/src/components/DashboardSection.js",[],"/Users/dps/proj/spreedsheet/src/components/Section.js",[],"/Users/dps/proj/spreedsheet/src/components/SectionHeader.js",[],["61","62"],"/Users/dps/proj/spreedsheet/src/components/SpreadsheetItems.js",["63","64","65"],"import React, { createRef, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { parse } from \"../jison/grammar\";\nimport { InputAdornment, TextField } from \"@material-ui/core\";\nimport useMousetrap from \"react-hook-mousetrap\"\n\nconst toposort = require('toposort');\n\nwindow.values = {'A1': 1, 'A2': '=A1+1'};\n\nconst useStyles = makeStyles((theme) => ({\n  paperItems: {\n    minHeight: \"300px\",\n  },\n  tableCell: {\n      borderLeftColor: theme.palette.divider, borderLeftStyle: \"solid\", borderLeftWidth: \"1px\"\n  },\n  outlined : {\n      backgroundColor: theme.palette.info.main\n  },\n  selectedCell : {\n        backgroundColor: theme.palette.secondary.main}\n  }\n  ));\n\n\nfunction SpreadsheetItems(props) {\n  const classes = useStyles();\n\n  const formulaFieldRef = createRef();\n\n  const defaultItems = {'A1': 1, 'A2': '=A1+1'};\n\n  const [cells, setCells] = useState(defaultItems);\n  const [errorCellText, setErrorCellText] = useState({});\n  \n  const [editCell, setEditCell] = useState(\"A2\");\n  const [selection, setSelection] = useState(\"A2:A5\");\n\n  const toposortCells = () => {\n    var graph = [];\n\n    for (var item in cells) {\n        const formula = String(cells[item]);\n        if (!formula.startsWith(\"=\")) {\n            window.values[item] = formula;\n        } else {\n            var edgesAdded = 0;\n\n            const matches = formula.match(/[A-Z][0-9]+/g);\n            for (var match in matches) {\n                edgesAdded++;\n                graph.push([matches[match], item]);\n            }\n\n            if (edgesAdded == 0) {\n                // This cell has no dependencies, but it is a formula so\n                // compute its value right now. (e.g. pure math)\n                try {\n                  window.values[item] = parse(formula);\n                  delete errorCellText[item];\n                } catch (err) {\n                  errorCellText[item] = err.message;\n                  window.values[item] = \"ERR\";\n                }\n            }\n        }\n\n      }\n      const topo = toposort(graph);\n      parseCells(topo);\n  }\n\n  const parseCells = (topo) => {\n      for (var i in topo) {\n          const cell = topo[i];\n          const formula = String(cells[cell]);\n\n          if (formula.startsWith(\"=\")) {\n              try {\n                const val = parse(cells[cell]);\n                window.values[cell] = val;\n                if (isNaN(val)) {\n                    window.values[cell] = \"NAN\";\n                }\n                delete errorCellText[cell];\n              } catch (err) {\n                errorCellText[cell] = err.message;\n                window.values[cell] = \"ERR\";\n              }\n          }\n      }\n  }\n\n  const fillDown = () => {\n      console.log(\"fillDown\");\n      const startCell = selection.split(\":\")[0];\n      const endCell = selection.split(\":\")[1];\n      const startParts = cellParts(startCell);\n      const endParts = cellParts(endCell);\n\n      var templateFormula = cells[startCell];\n      console.log(\"templateFormula\", templateFormula);\n\n      for (var i = startParts[1] + 1; i <= endParts[1]; i++) {\n          console.log(i);\n        const regex = /([A-Z])([0-9]+)/g;\n        var computedFormula = \"\";\n        var matches;\n        var pos = 0;\n        while (matches = regex.exec(templateFormula)) {\n            console.log(\"matches\", matches, computedFormula, pos);\n            // Add the next bit that isn't a cell name\n            computedFormula += templateFormula.substr(pos, matches.index);\n\n            // Then grab the cell name and increment it by one row (filling DOWN).\n            computedFormula += matches[1] + (Number(matches[2]) + 1);\n            pos = matches.index + matches[0].length;\n        }\n        // copy over anything left at the end of the template after all matches.\n        computedFormula += templateFormula.substring(pos);\n\n        console.log(\"computed\", computedFormula);\n        cells[startParts[0] + i] = computedFormula;\n        templateFormula = computedFormula;\n      }\n      toposortCells();\n      setCells(cells);\n      handleUnmodifiedDirKey(0,0);\n  }\n\n  const cellParts = (cellName) => {\n    const parts = cellName.match(/([A-Z])([0-9]+)/);\n    return [parts[1], Number(parts[2])];\n  }\n\n  const nextCell = (cellName, vdir, hdir) => {\n    const p = cellParts(cellName);\n    var v = Number(p[1]) + vdir;\n    if (v < 1) {\n        v = 1;\n    }\n    var h = String.fromCharCode(p[0].charCodeAt(0) + hdir);\n    if (h === '@') {\n        h = 'A';\n    }\n    return h + v;\n  }\n\n  const inSelection = (cellName) => {\n      const parts = cellParts(cellName);\n      const selStartParts = cellParts(selection.split(\":\")[0]);\n      const selEndParts = cellParts(selection.split(\":\")[1]);\n\n      return (parts[0] >= selStartParts[0] &&\n        parts[0] <= selEndParts[0] &&\n        parts[1] >= selStartParts[1] &&\n        parts[1] <= selEndParts[1]);\n}\n\nuseMousetrap(\"down\", () => handleUnmodifiedDirKey(1, 0));\nuseMousetrap(\"up\", () => handleUnmodifiedDirKey(-1, 0));\nuseMousetrap(\"left\", () => handleUnmodifiedDirKey(0, -1));\nuseMousetrap(\"right\", () => handleUnmodifiedDirKey(0, 1));\nuseMousetrap(\"shift+down\", () => handleShiftDirKey(1, 0));\nuseMousetrap(\"esc\", () => handleUnmodifiedDirKey(0, 0));\n\nconst handleUnmodifiedDirKey = (v, h) => {\n    const nCell = nextCell(editCell, v, h);\n    setEditCell(nCell);\n    setSelection(nCell + \":\" + nCell);\n}\n\nconst handleShiftDirKey = (v, h) => {\n    setSelection(\n        selection.split(\":\")[0] + \":\" +\n        nextCell(selection.split(\":\")[1], v, h)\n    )\n}\n\n  const formulaKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n        cells[editCell] = formulaFieldRef.current.value;\n        setEditCell(nextCell(editCell, 1, 0));\n    } else if (e.key === \"ArrowDown\") {\n        if (e.shiftKey) {\n            handleShiftDirKey(1, 0);\n        } else {\n            handleUnmodifiedDirKey(1, 0);\n        }\n    } else if (e.key === \"ArrowUp\") {\n        if (e.shiftKey) {\n            handleShiftDirKey(-1, 0);\n        } else {\n            e.preventDefault();\n            handleUnmodifiedDirKey(-1, 0);\n        }\n    } else if (e.key === \"ArrowLeft\") {\n        handleUnmodifiedDirKey(0, -1);\n    } else if (e.key === \"ArrowRight\") {\n        handleUnmodifiedDirKey(0, 1);\n    } else if (e.key === \"Escape\") {\n        handleUnmodifiedDirKey(0, 0);\n    } else if (e.key === \"d\" && e.ctrlKey) {\n        // Fill down\n        fillDown();\n    } \n    formulaFieldRef.current.focus();\n};\n\n  return (\n    <>\n    {toposortCells()}\n    <TextField inputRef={formulaFieldRef} key={\"formula-\" + editCell}\n      fullWidth id=\"filled-basic\" label=\"Formula\" variant=\"filled\" defaultValue={cells[editCell] || \"\"}\n      onKeyDown={formulaKeyDown} autoFocus\n      helperText={errorCellText[editCell] || \" \"}\n    InputProps={{\n        form: {\n            autocomplete: 'off',\n        },\n        startAdornment: <InputAdornment position=\"start\">{editCell}</InputAdornment>,\n      }}\n    />\n\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>🧮</TableCell>\n            {[...Array(21).keys()].map((i) => \n                <TableCell align=\"center\">{String.fromCharCode('A'.charCodeAt(0) + i)}</TableCell>)\n            }            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {[...Array(20).keys()].map((r, row) => (\n            <TableRow key={\"row-\" + row}>\n              <TableCell component=\"th\" scope=\"row\" key={\"rowl-\" + row}>\n                {row + 1}\n              </TableCell>\n              {[...Array(21).keys()].map((i) => {\n                  const cellName = String.fromCharCode('A'.charCodeAt(0) + i) + (row + 1);\n                  return <TableCell \n                      className={cellName === editCell ? classes.outlined : inSelection(cellName) ? classes.selectedCell : classes.tableCell}\n                      key={\"cell-\" + cellName + \"-\" + (cells[cellName] || '')}\n                      onClick={() => {setEditCell(cellName);setSelection(cellName + \":\" + cellName);}}\n                      align=\"right\">{window.values[cellName] || cells[cellName] || ''}\n                      \n                      </TableCell>;}\n                  )\n              }\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    </>\n  );\n}\n\nexport default SpreadsheetItems;\n","/Users/dps/proj/spreedsheet/src/jison/grammar.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"/Users/dps/proj/spreedsheet/src/util/theme.js",[],"/Users/dps/proj/spreedsheet/src/components/BackgroundImage.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":20},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"99","severity":1,"message":"105","line":42,"column":25,"nodeType":"101","messageId":"102","endLine":42,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":63,"column":28,"nodeType":"108","messageId":"109","endLine":63,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":118,"column":16,"nodeType":"112","messageId":"113","endLine":118,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":85,"column":1,"nodeType":"116","messageId":"117","endLine":130,"endColumn":2},{"ruleId":"118","severity":1,"message":"119","line":88,"column":1,"nodeType":"120","messageId":"121","endLine":88,"endColumn":7},{"ruleId":"106","severity":1,"message":"107","line":106,"column":49,"nodeType":"108","messageId":"109","endLine":106,"endColumn":51},{"ruleId":"99","severity":1,"message":"122","line":144,"column":35,"nodeType":"101","messageId":"102","endLine":144,"endColumn":41},{"ruleId":"99","severity":1,"message":"123","line":167,"column":14,"nodeType":"101","messageId":"102","endLine":167,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":172,"column":5,"nodeType":"126","messageId":"127","endLine":180,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":172,"column":5,"nodeType":"101","messageId":"130","endLine":172,"endColumn":17,"fix":"131"},{"ruleId":"99","severity":1,"message":"132","line":181,"column":48,"nodeType":"101","messageId":"102","endLine":181,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":203,"column":98,"nodeType":"108","messageId":"109","endLine":203,"endColumn":100},{"ruleId":"114","severity":1,"message":"115","line":216,"column":9,"nodeType":"116","messageId":"117","endLine":276,"endColumn":10},{"ruleId":"118","severity":1,"message":"119","line":278,"column":5,"nodeType":"133","messageId":"121","endLine":278,"endColumn":17},{"ruleId":"99","severity":1,"message":"134","line":606,"column":5,"nodeType":"101","messageId":"102","endLine":606,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":607,"column":1,"nodeType":"116","messageId":"117","endLine":642,"endColumn":2},{"ruleId":"118","severity":1,"message":"119","line":613,"column":1,"nodeType":"120","messageId":"121","endLine":613,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":615,"column":1,"nodeType":"120","messageId":"121","endLine":615,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":617,"column":1,"nodeType":"120","messageId":"121","endLine":617,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":619,"column":1,"nodeType":"120","messageId":"121","endLine":619,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":621,"column":1,"nodeType":"120","messageId":"121","endLine":621,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":623,"column":1,"nodeType":"120","messageId":"121","endLine":623,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":625,"column":1,"nodeType":"120","messageId":"121","endLine":625,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":627,"column":1,"nodeType":"120","messageId":"121","endLine":627,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":629,"column":1,"nodeType":"120","messageId":"121","endLine":629,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":631,"column":1,"nodeType":"120","messageId":"121","endLine":631,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":633,"column":1,"nodeType":"120","messageId":"121","endLine":633,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":635,"column":1,"nodeType":"120","messageId":"121","endLine":635,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":637,"column":1,"nodeType":"120","messageId":"121","endLine":637,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":639,"column":1,"nodeType":"120","messageId":"121","endLine":639,"endColumn":7},{"ruleId":"118","severity":1,"message":"119","line":641,"column":1,"nodeType":"120","messageId":"121","endLine":641,"endColumn":7},{"ruleId":"135","severity":1,"message":"136","line":654,"column":8,"nodeType":"137","messageId":"113","endLine":654,"endColumn":18,"fix":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'NotFoundPage' is defined but never used.","Identifier","unusedVar",["139"],["140"],"'setErrorCellText' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'tstack' is assigned a value but never used.","'popStack' is defined but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'_token_stack:' is defined but never used.","unused",{"range":"141","text":"142"},"'a' is defined but never used.","ReturnStatement","'YYSTATE' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression",{"range":"143","text":"144"},"no-global-assign","no-unsafe-negation",[6384,6406],"",[22438,22438],"()"]